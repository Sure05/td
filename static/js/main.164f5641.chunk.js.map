{"version":3,"sources":["app/components/enemy-form.jsx","app/components/enemy-list.jsx","app/settings/options.jsx","app/calculateBattle.js","app/components/Game.jsx","App.js","index.js"],"names":["makeId","length","result","characters","charactersLength","i","charAt","Math","floor","random","EnemyForm","addElement","useState","name","setName","distance","setDistance","speed","setSpeed","Form","Group","widths","Field","required","Input","value","onChange","event","fluid","placeholder","parseInt","type","Button","onClick","data","id","addEnemy","EnemyList","enemy","removeElementById","Segment","Table","celled","Header","Row","HeaderCell","width","Body","map","el","Cell","Options","start","towerRange","setTowerRange","setEnemy","inverted","list","push","filter","enemyList","disabled","gameStatus","newRange","step","options","range","unitList","info","units","setDefaultStats","startCall","clear","tour","movedEnemy","fireTower","checkGameStatus","filteredList","sort","a","b","splice","tryToWin","console","log","Game","setInfo","useEffect","calculateGame","then","res","List","index","Item","App","gameData","setGameData","Container","Grid","columns","Column","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.164f5641.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport {Button, Form, Input} from \"semantic-ui-react\";\r\n\r\nconst makeId = length => {\r\n\tlet result = '';\r\n\tlet characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n\tlet charactersLength = characters.length;\r\n\tfor (let i = 0; i < length; i++) {\r\n\t\tresult += characters.charAt(Math.floor(Math.random() *\r\n\t\t\tcharactersLength));\r\n\t}\r\n\treturn result;\r\n}\r\n\r\nfunction EnemyForm({addElement}) {\r\n\tconst [name, setName] = useState('');\r\n\tconst [distance, setDistance] = useState(0);\r\n\tconst [speed, setSpeed] = useState(0);\r\n\t\r\n\tconst addEnemy = () => {\r\n\t\tconst data = {\r\n\t\t\tid: makeId(3),\r\n\t\t\tname,\r\n\t\t\tdistance,\r\n\t\t\tspeed\r\n\t\t};\r\n\t\t\r\n\t\tif (distance > 0 && speed > 0 )\r\n\t\t\taddElement(data)\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<Form.Group widths='equal'>\r\n\t\t\t\t<Form.Field required>\r\n\t\t\t\t\t<label>Name</label>\r\n\t\t\t\t\t<Input value={name} onChange={(event, {value}) => setName(value)} fluid placeholder='Name'/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Form.Field required>\r\n\t\t\t\t\t<label>Distance</label>\r\n\t\t\t\t\t<Input value={distance} onChange={(event, {value}) => setDistance(parseInt(value))} type=\"number\"\r\n\t\t\t\t\t       fluid\r\n\t\t\t\t\t       placeholder='Example: 100'/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<Form.Field required>\r\n\t\t\t\t\t<label>Speed</label>\r\n\t\t\t\t\t<Input value={speed} onChange={(event, {value}) => setSpeed(parseInt(value))} fluid\r\n\t\t\t\t\t       placeholder='Example: 25'/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t</Form.Group>\r\n\t\t\t<Button onClick={() => addEnemy()}>Add bot</Button>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default EnemyForm;\r\n","import React from 'react';\r\nimport {Button, Label, Segment, Table} from \"semantic-ui-react\";\r\n\r\nfunction EnemyList({enemy = [], removeElementById}) {\r\n\treturn (\r\n\t\t<Segment>\r\n\t\t\t<Table celled>\r\n\t\t\t\t<Table.Header>\r\n\t\t\t\t\t<Table.Row>\r\n\t\t\t\t\t\t<Table.HeaderCell>Name</Table.HeaderCell>\r\n\t\t\t\t\t\t<Table.HeaderCell>Distance</Table.HeaderCell>\r\n\t\t\t\t\t\t<Table.HeaderCell>Speed</Table.HeaderCell>\r\n\t\t\t\t\t\t<Table.HeaderCell width={2}/>\r\n\t\t\t\t\t</Table.Row>\r\n\t\t\t\t</Table.Header>\r\n\t\t\t\t<Table.Body>\r\n\t\t\t\t\t{enemy.length > 0 ?\r\n\t\t\t\t\tenemy.map(el => <Table.Row key={el.id}>\r\n\t\t\t\t\t\t<Table.Cell>{el.name}</Table.Cell>\r\n\t\t\t\t\t\t<Table.Cell>{el.distance}</Table.Cell>\r\n\t\t\t\t\t\t<Table.Cell>{el.speed}</Table.Cell>\r\n\t\t\t\t\t\t<Table.Cell><Button onClick={() => removeElementById(el.id)}>Remove</Button></Table.Cell>\r\n\t\t\t\t\t</Table.Row>) : ''\r\n\t\t\t\t\t}\r\n\t\t\t\t</Table.Body>\r\n\t\t\t</Table>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n\r\nexport default EnemyList;\r\n","import React, {useState} from 'react';\r\nimport {Button, Form, Input, Segment} from \"semantic-ui-react\";\r\nimport EnemyForm from \"../components/enemy-form\";\r\nimport EnemyList from \"../components/enemy-list\";\r\n\r\n\r\n\r\nfunction Options({start}) {\r\n\tconst [towerRange, setTowerRange] = useState(25);\r\n\tconst [enemy, setEnemy] = useState([\r\n\t\t{id: \"d2p\", name: \"BotA\", distance: 100, speed: 10},\r\n\t\t{id: \"OIc\", name: \"BotB\", distance: 50, speed: 10},\r\n\t\t{id: \"Hu7\", name: \"BotC\", distance: 70, speed: 10},\r\n\t]);\r\n\t\r\n\tconst removeElementById = id => {\r\n\t\tconst list = [...enemy];\r\n\t\tsetEnemy(list.filter(el => el.id !== id))\r\n\t}\r\n\t\r\n\tconst addElement = (data) => {\r\n\t\tconst list = [...enemy];\r\n\t\tlist.push(data);\r\n\t\tsetEnemy(list)\r\n\t}\r\n\t\r\n\tconst startGame = () => {\r\n\t\tstart({\r\n\t\t\ttowerRange,\r\n\t\t\tenemyList: enemy\r\n\t\t})\r\n\t}\r\n\t\r\n\treturn (\r\n\t\t<Segment inverted>\r\n\t\t\t<Form inverted>\r\n\t\t\t\t<Form.Field>\r\n\t\t\t\t\t<label>Tower firing range</label>\r\n\t\t\t\t\t<Input value={towerRange} onChange={(event, {value}) => setTowerRange(parseInt(value))} type=\"number\" placeholder='Example: 50'/>\r\n\t\t\t\t</Form.Field>\r\n\t\t\t\t<EnemyForm addElement={(data) => addElement(data)}/>\r\n\t\t\t\t<EnemyList enemy={enemy} removeElementById={removeElementById}/>\r\n\t\t\t\t<Button onClick={() => startGame()} disabled={enemy.length === 0 && parseInt(towerRange) > 0} type='submit'>Start</Button>\r\n\t\t\t</Form>\r\n\t\t</Segment>\r\n\t);\r\n}\r\n\r\nexport default Options;\r\n","let gameStatus = true;\r\nlet newRange = false;\r\nlet step = 1;\r\nlet i = 1\r\nlet options = {\r\n\trange: 55,\r\n\tunitList: [\r\n\t\t{id: \"d2p\", name: \"1 BotA\", distance: 100, speed: 10},\r\n\t\t{id: \"OIc\", name: \"2 BotB\", distance: 50, speed: 20},\r\n\t\t{id: \"Hu7\", name: \"3 BotC\", distance: 30, speed: 20},\r\n\t\t{id: \"Hu73\", name: \"4 BotD\", distance: 200, speed: 45},\r\n\t\t{id: \"Hu74\", name: \"5 BotE\", distance: 160, speed: 25},\r\n\t\t{id: \"Hu74\", name: \"6 BotE\", distance: 120, speed: 35},\r\n\t]\r\n}\r\nlet info = []\r\nlet units = [];\r\n\r\n\r\nconst setDefaultStats = (data) => {\r\n\tgameStatus = true;\r\n\ti = 1;\r\n\tstep = 1\r\n\toptions = data;\r\n\tunits = options.unitList;\r\n\t\r\n}\r\n\r\nexport const startCall = (data, clear = true) => {\r\n\tif(data){\r\n\t\tif(clear) info = [];\r\n\t\tsetDefaultStats(data)\r\n\t\ttour()\r\n\t\treturn info\r\n\t}\r\n}\r\n\r\nconst tour = () => {\r\n\tif (gameStatus) {\r\n\t\tif (units.length > 0) {\r\n\t\t\tmovedEnemy()\r\n\t\t\tfireTower();\r\n\t\t}\r\n\t\tcheckGameStatus()\r\n\t}\r\n}\r\n\r\n\r\nconst fireTower = () => {\r\n\tconst filteredList = units.sort(function (a, b) {\r\n\t\t\r\n\t\tif (a.distance / a.speed < b.distance / b.speed) {\r\n\t\t\treturn -1;\r\n\t\t}\r\n\t\tif (a.distance / a.speed > b.distance / b.speed) {\r\n\t\t\treturn 1;\r\n\t\t}\r\n\t\treturn a.distance - b.distance\r\n\t});\r\n\t\r\n\tif (filteredList.length > 0) {\r\n\t\tconst el = filteredList[0];\r\n\t\t\r\n\t\tif (el.distance < options.range) {\r\n\t\t\tfilteredList.splice(0, 1);\r\n\t\t\tinfo.push(`Step ${step}: Kill ${el.name} at ${el.distance}m`)\r\n\t\t}\r\n\t\t\r\n\t\tunits = filteredList;\r\n\t}\r\n}\r\nconst movedEnemy = () => {\r\n\t\r\n\tunits = [...units].map(el => {\r\n\t\tif (el.distance - el.speed <= 0) {\r\n\t\t\tgameStatus = false;\r\n\t\t\tinfo.push(`Step ${step}: ${el.name} kill tower`)\r\n\t\t}\r\n\t\treturn {\r\n\t\t\t...el,\r\n\t\t\tdistance: el.distance - el.speed\r\n\t\t}\r\n\t})\r\n}\r\n\r\nconst checkGameStatus = () => {\r\n\tif (units.length === 0) gameStatus = false\r\n\tif (gameStatus === false) {\r\n\t\tif (units.length > 0) {\r\n\t\t\tinfo.push('loose, calculate new range')\r\n\t\t\ttryToWin();\r\n\t\t} else {\r\n\t\t\tinfo.push('win')\r\n\t\t\tif (newRange) info.push(`you can win with range: ${options.range}`)\r\n\t\t}\r\n\t} else {\r\n\t\tstep++\r\n\t\t\r\n\t\ttour()\r\n\t}\r\n}\r\n\r\nconst tryToWin = () => {\r\n\tif (i > 200) {\r\n\t\tconsole.log(`can't win this enemy`)\r\n\t} else {\r\n\t\ti++;\r\n\t\tnewRange = true\r\n\t\toptions.range++;\r\n\t\tunits = options.unitList;\r\n\t\tstep = 1;\r\n\t\tgameStatus = true;\r\n\t\tstartCall(options, false);\r\n\t}\r\n\t\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport {List} from \"semantic-ui-react\";\r\n\r\nimport {startCall} from '../calculateBattle'\r\n\r\nfunction Game({options}) {\r\n\t// const [step, setStep] = useState(1)\r\n\t// const [gameStatus, setGameStatus] = useState(true)\r\n\tconst [info, setInfo] = useState([])\r\n\t// const [enemy, setEnemy] = useState([])\r\n\tconst {enemyList, towerRange} = options;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tsetInfo([])\r\n\t\tasync function calculateGame() {\r\n\t\t\treturn startCall({\r\n\t\t\t\trange: towerRange,\r\n\t\t\t\tunitList: enemyList\r\n\t\t\t});\r\n\t\t}\r\n\t\tif(enemyList.length > 0)\r\n\t\t\tcalculateGame().then(res => {\r\n\t\t\t\tsetInfo(res)\r\n\t\t\t})\r\n\t}, [options])\r\n\t\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<List>\r\n\t\t\t\t{info.length > 0 ? info.map((el, index) => <List.Item key={index}>{el}</List.Item>) : ''}\r\n\t\t\t</List>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Game;\r\n","import React, {useState} from 'react';\nimport {Container, Grid} from \"semantic-ui-react\";\nimport Options from \"./app/settings/options\";\nimport Game from \"./app/components/Game\";\n\nfunction App() {\n\tconst [gameData, setGameData] = useState({\n\t\ttowerRange: null,\n\t\tenemyList: []\n\t})\n\tconst start = (data) => {\n\t\tsetGameData(data)\n\t}\n\treturn (\n\t\t<Container>\n\t\t\t<Grid>\n\t\t\t\t<Grid.Row columns={2}>\n\t\t\t\t\t<Grid.Column width={5}>\n\t\t\t\t\t\t<Game options={gameData} />\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t\t<Grid.Column width={11}>\n\t\t\t\t\t\t<Options start={start}/>\n\t\t\t\t\t</Grid.Column>\n\t\t\t\t</Grid.Row>\n\t\t\t</Grid>\n\t\t</Container>\n\t);\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}